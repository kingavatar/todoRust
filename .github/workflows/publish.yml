name: Publish

on:
  push:
    tags:
      - '*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  publish:
    name: Publish for ${{ matrix.os }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
            linux,
            windows,
            macos
        ]

        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/release/todo
            asset_name: todo-linux
            asset_content_type: application/x-pie-executable
          - name: windows
            os: windows-latest
            artifact_name: target/release/todo.exe
            asset_name: todo-windows
            asset_content_type: application/x-pie-executable
          - name: macos
            os: macos-latest
            artifact_name: target/release/todo
            asset_name: todo-macos
            asset_content_type: application/x-pie-executable

    steps:
    - uses: actions/checkout@v2.3.4 
    - uses: actions-rs/toolchain@v1.0.6
      with:
        profile: minimal
        toolchain: stable
        default: true
        override: true

    - name: Build
      uses: actions-rs/cargo@v1.0.1
      with:
          command: build
          args: --release --locked

    - name: Upload binaries to release
      uses: actions/upload-artifact@v2.2.0
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.artifact_name }}

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_name: ${{ matrix.asset_name }}
        asset_path: ${{ matrix.artifact_name }}
        asset_content_type: ${{matrix.asset_content_type}}